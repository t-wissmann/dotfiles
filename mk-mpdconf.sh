#!/usr/bin/env bash

set -e

if [[ $MPD_HOST =~ @ ]] ; then
    # if MPD_HOST is set and has a password, then re-use that
    password=${MPD_HOST%@*}
else
    password=$(pwgen 8 1)
fi

prog=$0
configfile=$HOME/.config/mpd/mpd.conf

ask() {
    local answer=n
    read -s -n 1 -p "==> $* [y/N]" answer
    echo
    [[ $answer =~ [Yy] ]]
}

msg() {
    echo ":: $*"
}

::() {
    echo ":: $*"
    "$@" || exit 1
}

print_config(){
cat <<EOF
# generated by $prog on $(date)

music_directory "~/musik"
playlist_directory "~/.config/mpd/playlists"
db_file "~/.config/mpd/database"
log_file "~/.config/mpd/log"
pid_file "~/.config/mpd/pid"
state_file "~/.config/mpd/state"
sticker_file "~/.config/mpd/sticker.sql"
#log_level "verbose"

default_permissions "read"
password "$password@read,add,control,admin"

# export MPD_HOST="$password@localhost"

port "6600"
bind_to_address "127.0.0.1"
gapless_mp3_playback "yes"
restore_paused "yes"

audio_output {
    type        "pulse"
    name        "MPD"
#   server      "localhost"
}
EOF
}

config_content=$( print_config )
echo "----  >8  ----"
cat <<< "$config_content"
echo "----  >8  ----"

if ! ask "Write above config to $configfile?" ; then
    exit 0
fi
:: mkdir -p "${configfile%/*}"
msg "Writing $configfile"
cat <<< "$config_content" > "$configfile"
if [[ -n "$DISPLAY" ]] && ask "Set MPD_HOST via herbstclient?" ; then
    :: herbstclient setenv MPD_HOST "$password@localhost"
fi



