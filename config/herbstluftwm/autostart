#!/bin/bash

# this is an simple config to herbstluftwm

pad="0 0 0 0"

function hc() {
    herbstclient "$@"
}
#[[ "$HOSTNAME" == faui* ]] && hc() { ~/bin/herbstclient "$@" ; }

hc emit_hook reload

xrdb -cpp cpp -merge ~/.Xdefaults

# extend path
if ! echo "$PATH"|tr ':' '\n'|grep -x "$HOME/bin" > /dev/null ; then
    hc setenv PATH "$HOME/bin:$PATH"
fi

if [[ -f /usr/lib/qt/plugins/platformthemes/libqt5gtk2.so ]] ; then
    hc setenv QT_QPA_PLATFORMTHEME qt5gtk2
else
    hc unsetenv QT_QPA_PLATFORMTHEME
fi
hc setenv FREETYPE_PROPERTIES "truetype:interpreter-version=35"

#xsetroot -solid '#D47A55'
hc set frame_gap 8
hc set snap_gap 8
# raindrops
#feh --bg-center ~/Documents/wallpaper/water/rain.jpg
case "$HOSTNAME" in
    ghul)
        feh --bg-fill ~/Documents/wallpaper/flowers/DSC02801.jpg
        #feh --bg-fill ~/Documents/wallpaper/water/rain.jpg
        #feh --bg-fill ~/Documents/wallpaper/water/38174-theriver.jpg
        #feh --bg-fill ~/Documents/wallpaper/starwars/1255654029702.png
        #feh --bg-fill ~/Documents/wallpaper/landscape/landscape-keltern-1_wall.jpg
        #feh --bg-fill ~/Documents/wallpaper/landscape/lonely_tree_by_gheias-d319736.jpg
        #feh --bg-fill ~/Documents/wallpaper/nature/spring fog--0
        #feh --bg-fill ~/Documents/wallpaper/landscape/naboo.jpg
        #feh --bg-fill ~/Documents/wallpaper/nature/coloured_bush_1920x1200.jpg
        #feh --bg-tile ~/Documents/wallpaper/patterns/black-mosaic.png
        #feh --bg-tile ~/Documents/wallpaper/patterns/pattern-ob-9fbc00.png
        #feh --bg-tile ~/Documents/wallpaper/patterns/strawberry-tile.jpg
        #feh --bg-tile ~/Documents/wallpaper/patterns/green-diagonals.png
        #feh --bg-tile ~/Documents/wallpaper/patterns/white-mosaic.png
        #feh --bg-tile ~/Documents/wallpaper/patterns/black-pattern-ob.png
        #feh --bg-tile ~/Documents/wallpaper/patterns/rXuLc2TI.gif
        ;;
    hoth|towi04|x1)
        nitrogen --restore
        ;;
    *)
        ;;
esac

# keyboard-layout:
has-kbd() {
    lsusb | grep "ID $*" > /dev/null
}

hc keyunbind --all

keyboard=
if has-kbd 04d9:0134 Holtek Semiconductor ; then # pure kbtalking
    setxkbmap us -variant altgr-intl -option compose:menu -option ctrl:nocaps -option compose:ralt -option compose:rwin
elif has-kbd 04d9:0112 Holtek Semiconductor ; then # kbparadise V60 Mini
    setxkbmap us -variant altgr-intl -option compose:menu -option ctrl:nocaps -option compose:rwin
    keyboard=v60mini
elif has-kbd 2be8:0004 ; then # Progres Touch Retro Tiny
    setxkbmap us -variant altgr-intl -option compose:rctrl -option ctrl:nocaps
elif false ; then # mac
    setxkbmap us -variant altgr-intl -option compose:menu -option ctrl:nocaps -option compose:ralt -option compose:rctrl
    xmodmap -e 'keycode any 94 = grave'
elif [[ $HOSTNAME == x1 ]] ; then
    setxkbmap us -variant altgr-intl -option compose:menu -option ctrl:nocaps -option compose:prsc
else
    setxkbmap us -variant altgr-intl -option compose:menu -option ctrl:nocaps -option compose:ralt -option compose:rwin
    keyboard=other
fi

# keybindings
Mod=Mod4
if [ $HOSTNAME = faui03a ] || [ $DISPLAY = :13 ] ; then
    Mod=Mod1
fi
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
~/.config/herbstluftwm/closeorkill.sh
hc keybind $Mod-Return spawn ~/dotfiles/utils/with-same-pwd urxvt
hc keybind $Mod-Shift-Return spawn ~/dotfiles/utils/with-same-pwd thunar
hc keybind $Mod-x spawn rofi -columns 3 -show drun
hc keybind $Mod-Shift-x spawn rofi -columns 3 -show run
hc keybind $Mod-bracketleft spawn rofi-bibbrowser
hc keybind $Mod-apostrophe spawn ~/dotfiles/menu/rofi-mpd.sh
hc keybind $Mod-backslash spawn ~/dotfiles/menu/rofi-pass.sh

videodir=/mnt/unterhaltung/video/
[[ -d ~/video ]] && videodir=$HOME/video/
hc keybind $Mod-Shift-apostrophe spawn ~/dotfiles/menu/rofi-file-open.sh "$videodir"
hc keybind $Mod-F2 spawn gmrun
#hc keybind $Mod-e spawn thunar
hc keybind $Mod-semicolon spawn rofi -show window
#hc keybind $Mod-Shift-semicolon spawn ~/.config/herbstluftwm/wselect.sh bring
hc keybind Mod4-y spawn bash -c 'mpv --force-window=immediate --no-terminal --keep-open=yes --ytdl-format "best[width<=1280]" --ytdl-raw-options=yes-playlist= --ytdl "$(xclip -selection clipboard -o)"'
hc keybind $Mod-z spawn ~/.config/herbstluftwm/omnivim.py

# tags
BINDS=(
    1:irc
    2:vim
    3:web
    4:mail
    5:music
    6:pdf
    7:tmp
    8:video
    9:doc
    w:firefox
    e:tmux
)

hc silent attr tags.by-name.default && hc rename default "irc"
for i in "${BINDS[@]}" ; do
    key="${i%%:*}"
    tag="${i#*:}"
    hc add "$tag"
    hc keybind "$Mod-$key" or . and , compare tags.focus.name = "$tag" , try use_previous . use "$tag"
    hc keybind "$Mod-Shift-$key" move "$tag"
done

hc load irc     '(clients max:0)'
#hc load vim     '(split vertical:0.700000:1 (clients max:0) (clients max:0))'
hc load web     '(clients max:0)'
#hc load mail    '(split vertical:0.200000:1 (clients horizontal:0) (clients max:0))'
hc load doc     '(clients max:0)'

hc keybind "$Mod-period" use_index +1 --skip-visible
hc keybind "$Mod-comma"  use_index -1 --skip-visible
hc keybind $Mod-Escape use_previous
hc keybind XF86Eject spawn eject -T

# layouting
hc keybind $Mod-i toggle always_show_frame
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
hc keybind $Mod-u split vertical 0.5
hc keybind $Mod-o split horizontal 0.5
hc keybind $Mod-v split explode
hc keybind $Mod-m spawn ~/git/herbstluftwm/scripts/maximize.sh
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# resizing
RESIZESTEP=0.02
hc keybind $Mod-Control-h resize left +$RESIZESTEP
hc keybind $Mod-Control-j resize down +$RESIZESTEP
hc keybind $Mod-Control-k resize up +$RESIZESTEP
hc keybind $Mod-Control-l resize right +$RESIZESTEP
hc keybind $Mod-Control-Left resize left +$RESIZESTEP
hc keybind $Mod-Control-Down resize down +$RESIZESTEP
hc keybind $Mod-Control-Up resize up +$RESIZESTEP
hc keybind $Mod-Control-Right resize right +$RESIZESTEP

# mouse
hc mouseunbind
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize
hc mousebind $Mod-B4 call substitute WID clients.dragged.winid spawn transset-df --inc -i WID 0.05
hc mousebind $Mod-B5 call substitute WID clients.dragged.winid spawn transset-df --dec -i WID -m 0.2 0.05
frame_gap_steps=( 0 1 2 3 $(seq 4 4 100) )
i=${#frame_gap_steps[@]} ; for x in "${frame_gap_steps[@]}" ; do reversed_frame_gap_steps[--i]=$x ; done
hc mousebind $Mod-Control-B4 call cycle_value frame_gap "${frame_gap_steps[@]}" "${reversed_frame_gap_steps[0]}"
hc mousebind $Mod-Control-B5 call cycle_value frame_gap "${reversed_frame_gap_steps[@]}" "${frame_gap_steps[0]}" 

# focus
hc keybind $Mod-BackSpace cycle_monitor
hc keybind Alt-Tab          cycle_all 1
hc keybind Alt-Shift-Tab    cycle_all -1
hc keybind $Mod-c cycle
#hc keybind $Mod-y cycle -1
hc keybind $Mod-h or / focus left   #/ chain , focus_monitor -1 , focus_edge right
hc keybind $Mod-j or / focus down   #/ chain , focus_monitor +1 , focus_edge up
hc keybind $Mod-k or / focus up     #/ chain , focus_monitor -1 , focus_edge down
hc keybind $Mod-l or / focus right  #/ chain , focus_monitor +1 , focus_edge left
hc keybind $Mod-Left or / focus left   #/ chain , focus_monitor -1 , focus_edge right
hc keybind $Mod-Down or / focus down   #/ chain , focus_monitor +1 , focus_edge up
hc keybind $Mod-Up or / focus up     #/ chain , focus_monitor -1 , focus_edge down
hc keybind $Mod-Right or / focus right  #/ chain , focus_monitor +1 , focus_edge left
hc keybind $Mod-Shift-Left or / shift left / \
    chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Shift-Down or / shift down / \
    chain , lock , shift_to_monitor -d , focus_monitor -d , unlock
hc keybind $Mod-Shift-Up or / shift up / \
    chain , lock , shift_to_monitor -u , focus_monitor -u , unlock
hc keybind $Mod-Shift-Right or / shift right / \
    chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
hc keybind $Mod-Shift-h or / shift left / \
    chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Shift-j or / shift down / \
    chain , lock , shift_to_monitor -d , focus_monitor -d , unlock
hc keybind $Mod-Shift-k or / shift up / \
    chain , lock , shift_to_monitor -u , focus_monitor -u , unlock
hc keybind $Mod-Shift-l or / shift right / \
    chain , lock , shift_to_monitor -r , focus_monitor -r , unlock

if [[ "$keyboard" = "v60mini" ]] ; then
    # i keep hitting this accidentally on my v60 mini
    # so make this a key without any action
    hc keybind Pause true
else
    hc keybind Pause spawn playerctl play-pause
fi
#hc keybind Mod4-q spawn ~/scripts/mpd/dmenu.sh play
#hc keybind Mod4-w spawn ~/scripts/mpd/dmenu.sh totem
#hc keybind Mod4-t spawn ~/scripts/utils/iptv/watch-dmenu.sh
hc keybind Mod1+Mod4+u spawn playerctl previous
hc keybind Mod1+Mod4+i spawn playerctl play-pause
hc keybind Mod1+Mod4+o spawn playerctl next

#hc keybind XF86AudioStop spawn mpc -q random
#hc keybind XF86AudioPrev spawn mpc -q prev
#hc keybind XF86AudioPlay spawn mpc -q toggle
#hc keybind XF86AudioNext spawn mpc -q next

hc keybind Mod4+n spawn ~/dotfiles/menu/utf8select.sh

if pactl list > /dev/null 2>&1 ; then
    #hc keybind Shift+XF86AudioMute spawn ponymix
    hc keybind XF86AudioMute        spawn ponymix toggle
    hc keybind XF86AudioMicMute     spawn ponymix --source toggle
    hc keybind XF86AudioLowerVolume spawn ponymix decrease 4
    hc keybind XF86AudioRaiseVolume spawn ponymix increase 4
    hc keybind Shift-XF86AudioLowerVolume spawn ponymix decrease 2
    hc keybind Shift-XF86AudioRaiseVolume spawn ponymix increase 2
else
    audioaction() {
        # example for $1: toggle
    cat <<EOF
    amixer -q sset Master $1 \
        || amixer -c 1 -q sset Master $1 \
        || amixer -q sset Speaker $1
EOF
    }
    hc keybind XF86AudioMute        spawn bash -c "$(audioaction toggle)"
    hc keybind XF86AudioLowerVolume spawn bash -c "$(audioaction 1- )"
    hc keybind XF86AudioRaiseVolume spawn bash -c "$(audioaction 1+ )"
fi

# some settings
hc set focus_follows_mouse 1

### COLORS ###
colors_thin_some_color() {
    local color="$1"
    hc set frame_border_active_color "$color"
    hc set frame_border_normal_color 'black'
    hc set frame_bg_normal_color '#141414'
    hc set frame_bg_active_color '#580000'
    hc set always_show_frame 1
    hc set frame_border_width 1
    hc set frame_bg_transparent 1
    hc set window_border_width 1
    hc set window_border_normal_color '#242424'
    hc set window_border_active_color "$color"
    hc set smart_frame_surroundings 1
    hc set smart_window_surroundings 1
}

colors_thin_red() {
    colors_thin_some_color '#b20000'
}

colors_thin_purple() {
    colors_thin_some_color '#FF2AC4'
    hc set window_border_width 1
    hc set frame_border_width 2
}

colors_thick_brown() {
    hc set frame_border_active_color '#49351D'
    hc set frame_border_normal_color '#73532D'
    hc set frame_bg_normal_color '#BD9768'
    hc set frame_bg_active_color '#BD8541'
    hc set frame_border_width 2
    hc set window_border_width 3
    hc set window_border_normal_color '#AE8451'
    hc set window_border_active_color '#F6FF00'
}

colors_pwmt_green() {
    hc set frame_border_active_color '#222222'
    hc set frame_border_normal_color '#101010'
    hc set frame_bg_normal_color '#565656'
    hc set frame_bg_active_color '#345F0C'
    hc set frame_border_width 1
    hc set window_border_width 2
    hc set window_border_inner_width 0
    hc set window_border_normal_color '#454545'
    hc set window_border_active_color '#9fbc00'
    hc set always_show_frame 1
    hc set window_gap -2
    hc set frame_padding 2
    hc set frame_bg_transparent 1
    hc set frame_transparent_width 3
}

colors_snow() {
    hc set frame_border_active_color '#00182F'
    hc set window_border_active_color '#1361AD'
    hc set frame_border_width 1
    hc set frame_bg_transparent 1
    hc set frame_bg_active_color '#103462'
    hc set window_border_width 2
    hc set frame_border_normal_color 'black'
    hc set frame_bg_normal_color '#141414'
    hc set window_border_width 3
    hc set window_border_inner_color '#2b2b2b'
    hc set window_border_normal_color '#242424'
}

new_theme() {
# use hlwm decorations
hc lock
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc attr theme.outer_width 0
hc attr theme.border_width 3
hc attr theme.padding_top 0
hc attr theme.outer_color '#101010'
hc attr theme.inner_color '#101010'
hc attr theme.inner_width 1
hc attr theme.normal.color '#454545'
hc attr theme.active.color '#9fbc00'
hc attr theme.urgent.color '#C71364'

hc attr theme.floating.padding_top 0
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.inner_width 1

hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#303030'
hc set frame_bg_active_color '#809220'
hc set frame_border_width 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 4

hc set smart_frame_surroundings 0
hc set frame_padding 0

hc unlock
}

new_theme_minimal() {
# use hlwm decorations
hc lock
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc attr theme.outer_width 0
hc attr theme.border_width 3
hc attr theme.padding_top 0
hc attr theme.outer_color '#101010'
hc attr theme.inner_color '#101010'
hc attr theme.inner_width 1
hc attr theme.normal.color '#454545'
hc attr theme.active.color '#86AB5F'
hc attr theme.urgent.color '#C71364'

hc attr theme.floating.padding_top 0
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.inner_width 1

hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#303030'
hc set frame_bg_active_color '#86AB5F'
hc set frame_border_width 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 4

hc set smart_frame_surroundings 0
hc set frame_padding 0

hc unlock
}

rezlooks_theme() {
hc lock
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc attr theme.outer_width 0
hc attr theme.border_width 2
hc attr theme.padding_top 5
hc attr theme.outer_color '#404040'
hc attr theme.inner_color '#404040'
hc attr theme.inner_width 1
hc attr theme.normal.color '#363636'
hc attr theme.active.inner_color '#5F833A'
hc attr theme.active.color '#A9C48D'
hc attr theme.urgent.color '#C71364'

hc attr theme.floating.border_width 3
hc attr theme.floating.outer_width 1

hc set frame_border_active_color '#5F833A'
hc set frame_border_normal_color '#404040'
hc set frame_bg_normal_color '#303030'
hc set frame_bg_active_color '#86AB5F'
hc set frame_border_width 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 4
hc set frame_active_opacity 50

hc set smart_frame_surroundings 0
hc set frame_padding 0

hc unlock
}

# new colors
case "$HOSTNAME" in
    x40)    colors_thin_red ;;
    #faui0*) colors_thin_purple ;;
    dachs)  colors_snow ;;
    parker)
        new_theme
        hc attr theme.active.color '#9fbc00'
        hc attr theme.normal.color '#2D2D2D'
        hc set frame_bg_active_color '#9fbc00'
        ;;
    *) rezlooks_theme ;;
esac


SCRIPTSDIR=$HOME/git/herbstluftwm/scripts/

if ! [ -d "$SCRIPTSDIR" ] ; then
    SCRIPTSDIR=$HOME/dev/c/herbstluftwm/scripts/
fi

if [ -d "$SCRIPTSDIR" ] ; then
    hc keybind $Mod-Alt-space spawn $SCRIPTSDIR/execwith.sh \
        ~/.bash_settings $SCRIPTSDIR/dmenu.sh set_layout
    terminal_options='WIDTH_PERC=100'
    if [[ "$HOSTNAME" == x1 ]] ; then
        terminal_options+=' HEIGHT_PIXELS=600'
    fi
    hc keybind $Mod-t spawn env $terminal_options $SCRIPTSDIR/q3terminal.sh
fi

hc keybind $Mod-g spawn ~/dotfiles/menu/hlwm-workspace.sh
hc keybind $Mod-Shift-g spawn ~/dotfiles/menu/hlwm-workspace.sh --move

# multimonitors
case "$HOSTNAME" in
    hoth|towi04)
        # hc focus_monitor 1
        #hc keybind $Mod-Control-q chain , quit , spawn killall foosession
        hc keybind $Mod-Ctrl-q spawn ~/scripts/logout-dialog.sh
        hc keybind $Mod-Shift-q spawn ~/scripts/logout-dialog.sh
        hc keybind $Mod-Control-Shift-q quit
        hc keybind Redo spawn ~/scripts/mpd/mpc.sh seek 0
        hc keybind Mod4+F1 spawn ~/scripts/utils/lock.sh
        hc keybind $Mod-F3 spawn mygtkmenu ~/.config/mygtkmenu.conf
        hc keybind $Mod-XF86Cut spawn ~/.screenlayout/pivot-right.sh
        hc keybind $Mod-SunF37         spawn $c/toggledualhead.sh
        hc set frame_bg_transparent 1
        hc keybind XF86Stop spawn ~/scripts/mpd/mpc.sh toggle
        hc keybind XF86PowerOff spawn xset dpms force off
        hc keybind XF86Calculator spawn bash -c 'systemctl suspend -i ; sleep 10 ; xset -b'
        ;;
    dachs)
        hc keybind $Mod-Return spawn xterm
        #dualhead 1920 1200
        ;;
    faui8*)
        #hc keybind $Mod-F1 spawn bash -c ' i3lock -i ~/wallpaper/patterns/strawberry-tile.png -t && systemctl suspend'
        hc keybind $Mod-b spawn bash -c 'playerctl -a pause; ~/dotfiles/utils/i3lock.sh & { sleep 1.5 ; xset dpms force off ; }'
        ;;
    ghul)
        # TODO: why are there problems with XGrabKey for XF86ScreenSaver;
        hc keybind XF86ScreenSaver spawn ~/bin/lock.sh
        hc keybind $Mod-F1 spawn ~/bin/lock.sh
        hc keybind       XF86Launch1 spawn ~/bin/suspend.sh --lock
        hc keybind Shift-XF86Launch1 spawn ~/bin/suspend.sh
        hc keybind XF86TouchpadToggle spawn netmenu
        ;;
    parker)
        hc keybind $Mod-Ctrl-q quit
        hc keybind $Mod-F1 spawn i3lock --color=242424
        ;;
    faui0*)
        hc keybind $Mod-x spawn ~/scripts/menu.sh
        hc keybind $Mod-F1 spawn ~/scripts/lock.sh
        hc keybind $Mod-Shift-q quit
        hc keybind $Mod-Control-q quit
        xset -b
        ;;
    x1)
        hc keybind XF86MonBrightnessDown spawn xbacklight -dec 10
        hc keybind XF86MonBrightnessUp spawn xbacklight -inc 10
        hc keybind XF86Tools spawn ~/dotfiles/menu/rofi-netctl
        ;;
    *)
        ;;
esac

hc or , compare monitors.count  != 0 , detect_monitors
panel=~/.config/herbstluftwm/panel.sh
~/git/herbstluftwm/share/restartpanels.sh $panel

# nice tree styles:
#herbstclient set tree_style '╾│ ├└╼─┐'
herbstclient set tree_style '╾│ ├╰╼─╮'
#herbstclient set tree_style '*| +`>-.'
#herbstclient set tree_style '*| +`-->'

### RULES ###
hc unrule -F
hc rule focus=on
hc rule class=Totem tag=video index=/ focus=off
hc rule class=Gmrun pseudotile=on focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc rule class='logout-dialog' pseudotile=on focus=on
hc rule instance=irc tag=irc
hc rule instance=finch tag=im
hc rule instance=mutt tag=mail
hc rule class=Do instance=Do manage=off
# do not manage audacity tooltips
hc rule class=Audacity instance=Audacity title='' manage=off

# GIMP
# ensure there is a gimp tag
#hc add gimp
#hc load gimp '
#(split horizontal:0.850000:0
#  (split horizontal:0.200000:1
#    (clients vertical:0)
#    (clients grid:0))
#  (clients vertical:0))
#'               # load predefined layout
# center all other gimp windows on gimp tag
hc rule class=Gimp tag=gimp index=01 pseudotile=on
hc rule class=Gimp windowrole~'gimp-(image-window|toolbox|dock)' \
    pseudotile=off
hc rule class=Gimp windowrole=gimp-toolbox focus=off index=00
hc rule class=Gimp windowrole=gimp-dock focus=off index=1
hc rule title=Unbenannt class=Chromium pseudotile=on # make chromium menus pseudotile

# Instant messenger

#imtag=im
#hc add "$imtag"
#hc load "$imtag" \
#    '(split horizontal:0.800000:0 (clients grid:0) (clients vertical:0))'
#hc rule class=Pidgin   windowrole=buddy_list tag=$imtag focus=off index=1
#hc rule class=Pidgin ! windowrole=buddy_list tag=$imtag focus=on  index=0


### SCRIPTS ###
c=~/.config/herbstluftwm/
hc keybind $Mod-F10         spawn $c/fastterminal.sh -t
hc keybind $Mod-Shift-F10   spawn $c/fastterminal.sh -b
hc keybind $Mod-F12         spawn $c/toggledualhead.sh
hc keybind $Mod-bracketright spawn $c/toggledualhead.sh
#hc keybind XF86Display      spawn $c/toggleexternalmonitor.sh
hc keybind XF86Display      spawn ~/dotfiles/menu/rofi-xrandr.sh
hc keybind $Mod-F9          emit_hook togglehidepanel

STATEFILE=~/.config/herbstluftwm/state
[ -f "$STATEFILE" ] && ~/dev/c/herbstluftwm/scripts/loadstate.sh < "$STATEFILE"
[ -f "$STATEFILE" ] && ~/git/herbstluftwm/scripts/loadstate.sh < "$STATEFILE"
rm -f "$STATEFILE"

#if [[ $HOSTNAME != x1 ]] ; then
#mpc -q current -f '' > /dev/null && # if we can connect to a mpd
#{
#    f=$(mpc -f %file% current)
#    {
#        pids=( )
#        mpc idleloop player &
#        pids+=( $! )
#        hc -w 'reload' > /dev/null
#        # stopp all started processes
#        kill ${pids[@]}
#    } | while read line ; do
#            f2=$(mpc -f %file% current)
#            [[ "$f" != "$f2" ]] && ~/scripts/mpd/showosd.sh
#            f="$f2"
#    done
#} &
#fi

# add an external panel
#{
#    pids=( )
#    # reserve some space for the panel on monitor 0
#    hc pad 0 "" "" 31
#    # start the panel itself and remember its pid
#    xfce4-panel -d --sm-client-disable &
#    pids+=( $! )
#    # or start another panel:
#    # mypanel &
#    # pids+=( $! )
#    # wait until the panels should be stopped
#    hc -w '(quit_panel|reload)'
#    # stopp all started panels
#    kill ${pids[@]}
#} &

## custom settings per workspace
#{
#    layout=
#    herbstclient --idle '(tag_changed|reload)' |
#    while read line ; do
#        cmd=${line%%	*} # notice that this is a real tab character
#        line=${line#*	}  # same here
#        arg1=${line%%	*} # and here
#        case "$cmd" in
#            reload) break ;;
#            tag_changed)
#                lastlayout="$layout"
#                case "$arg1" in
#                    vim) layout=2 ;;
#                    *)   layout=0 ;;
#                esac
#                # only update if the setting really changes
#                [ "$lastlayout" = "$layout" ] \
#                    || herbstclient set default_frame_layout "$layout"
#            ;;
#        esac
#    done
#} &

hc unlock


