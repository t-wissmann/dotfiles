#!/bin/bash


# some colors
export c_normal='\e[0m'
export c_red='\e[1;31m'
export c_green='\e[1;32m'
export c_yellow='\e[1;33m'
export c_blue='\e[1;34m'
export c_purple='\e[1;35m'
export c_cyan='\e[1;36m'
export c_white='\e[1;37m'
export c_grey='\e[0;37m'

# alwayse bhave like xterm..
#[ "$TERM" = "linux" ] || export TERM=xterm
export EDITOR=vim
export PAGER="less"

#PS1='[\u@\h \W]\$ '
# show username if it is not thorsten
#if ! [ $(whoami) = thorsten ] ; then
#    # show username in PS1 and xterm-title
#    SHOWUSERNAME=true
#else
#    # clear this var
#    SHOWUSERNAME=""
#fi


# hint: 0**0 = 1, but 0**x = 0, if x != 0
if ! [ -z "$SHOWUSERNAME" ] ; then
PS1='\[\e[1;3$((3+$?*2))m\](\[\e[1;36m\]\h: \[\e[1;31m\]\u\[\e[1;33m\]:\[\e[1;34m\]\w\[\e[1;33m\])\[\e[0;0m\] '
else
PS1='\[\e[1;3$((5+(0**$?)*(-2)))m\](\[\e[1;36m\]\h: \[\e[1;34m\]\w\[\e[1;3$((5+(0**$?)*(-2)))m\])\[\e[0;0m\] '
fi

# TIP:
#\[     begins a sequence of non-printing characters
#\]     ends a sequence of non-printing characters

# extend path-variable
if [ -d "${HOME}/.local/bin" ] ; then
    export PATH="${HOME}/.local/bin:${PATH}"
fi
if [ -d "${HOME}/bin" ] ; then
    export PATH="${HOME}/bin:${PATH}"
fi
if [ -d "${HOME}/.cabal/bin" ] ;then
    export PATH="${HOME}/.cabal/bin:${PATH}"
fi

# extend man-variable
if [ -d "${HOME}/man" ] ; then
    export MANPATH="${HOME}/man:${MANPATH}"
fi

unset PROMPT_COMMAND

 # set xterm title
 case "$TERM" in
    rxvt*-256color|xterm|rxvt-unicode)
#      XTERM_TITLE='\[\033]0;\W - Konsole (\w)\007\]'
      if ! [ -z "$SHOWUSERNAME" ] ; then
        XTERM_TITLE='\[\033]0;\u:\w - Konsole\007\]'
      else
        XTERM_TITLE='\[\033]0;\W (\w)\007\]'
      fi
      #PS1="${PS1}${XTERM_TITLE}"
      ;;
 esac;

source /usr/share/git/git-prompt.sh 2> /dev/null || __git_ps1() { true; }
printexitstat() {
    local status=$?
    local l=$(printf "%${COLUMNS}s" " ")
    l=${l// /─}
    l="${l:12}( \e[0;38;5;214m\t\e[1;30m )"
    #printf '\e[1;30m$l\r┌─( '
    [ "$status" = 0 ] \
        && exitstatus="\e[0;38;2;159;188;0m:)" \
        || exitstatus="\e[0;38;2;196m:("
    promptline="$l"$'\r┌─'
    hasjobs=$(jobs -p)
    git=$(__git_ps1 "─( \e[0;31m%s \e[1;30m)")
    PS1="\e[1;30m$promptline─( \e[0;38;5;227m\u\e[0;30m@\e[0;32m\h\e[1;30m )─( \e[0;38;5;199m\w \e[1;30m)$git─( $exitstatus \e[1;31m${hasjobs:+\j }\e[1;30m)\n\[\e[1;30m\]└─╼ \[\e[0m\]$XTERM_TITLE"
}

hasgui=0
case $TERM in
    *rxvt*|xterm)
        hasgui=1
        ;;
    *)
        ;;
esac
PROMPT_COMMAND="printexitstat $hasgui"

# activate bash-comple(ti)tion

#if [ -f /etc/bash_completion ] ; then
#	. /etc/bash_completion
#fi

# add colors for less when viewing manpages
export LESS_TERMCAP_mb=$'\e[01;31m' # begin blinking - for what is this line good for ?
export LESS_TERMCAP_md=$'\e[1;35m' # begin bold - syntax and keywords
export LESS_TERMCAP_me=$'\e[0m' # end mode - some rows
export LESS_TERMCAP_so=$'\e[0;43;30m' # begin standout-mode -- statusbar and searchhighlights
export LESS_TERMCAP_se=$'\e[0m' # end standout-mode first and last row background
export LESS_TERMCAP_us=$'\e[0;32m' # begin underline "variables"
export LESS_TERMCAP_ue=$'\e[0m'    # end underline background

# for openoffice .... -.-
export OOO_FORCE_DESKTOP='gnome'


### BASH OPTIONS ###
shopt -s histappend
export HISTIGNORE='&:ls:cd ~:cd ..:[bf]g:exit:h:history:rm *'
export HISTSIZE=
export HISTCONTROL=erasedups

export FZF_DEFAULT_OPTS="--tabstop=4 --color=dark,bg+:0,hl+:3,hl:2"
export PASSWORD_STORE_ENABLE_EXTENSIONS="true"

# vim: ft=sh
