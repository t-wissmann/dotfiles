#!/usr/bin/env bash
#
print_usage() {
cat <<EOF
$cmdname TEXFILESâ€¦

Remove all files generated by the compilation of the given TEXFILES
EOF
}


fail() {
    echo "$*" >&2 ; exit 1
}

ask() {
    echo -n "==> $1 [y/n] "
    read -n 1 reply
    echo
    if [[ "${reply^^}" == 'Y' ]] ; then
        return 0
    else
        return 1
    fi
}

cmdname="$0"
input_files=( "$@" )

if [[ "${#input_files[@]}" -eq 0 ]] ; then
    print_usage >&2
fi

for t in "${input_files[@]}" ; do
    fls=${t%%.tex}.fls
    if [[ -e "$fls" ]] ; then
        mapfile -t output_files < <(grep '^OUTPUT ' "$fls"|cut -d ' ' -f2)
    fi
    output_files+=(
        "${t%%.tex}.blg"
        "${t%%.tex}.bbl"
        "${t%%.tex}.fdb_latexmk"
        "${t%%.tex}.synctex"
        "${t%%.tex}.synctex.gz"
        "${t%%.tex}."{nav,run.xml,snm,toc}
        "$fls"
    )
    existing_output_files=( )
    for o in "${output_files[@]}" ; do
        if [[ -e "$o" ]] ; then
            existing_output_files+=( "$o" )
        fi
    done

    if [[ "${#existing_output_files[@]}" -ge 1 ]] ; then
        if ask "Remove the following files? ${existing_output_files[*]}" ; then
            rm -v "${existing_output_files[@]}"
        fi
    fi
done
